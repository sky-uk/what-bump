version: 2

jobs:
  build:
    docker:
      - image: ekidd/rust-musl-builder:1.38.0
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Quick build
          command: cargo build
      - run:
          name: Run all tests
          command: cargo test --all
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
#      - persist_to_workspace:
#          root: target/x86_64-unknown-linux-musl/release
#          paths:
#            - what-bump
#      - store_artifacts:
#          path: target/x86_64-unknown-linux-musl/debug/what-bump

  release-build:
    docker:
      - image: ekidd/rust-musl-builder:1.38.0
    steps:
      - run:
          name: Calculate new version
          command: |
            LATEST_VERSION=$(git tag | grep -E '[0-9]+.[0-9]+.[0-9]+.*' | sort -rV | head -1)
            NEW_VERSION=$(./target/x86_64-unknown-linux-musl/debug/what-bump --from $LATEST_VERSION $LATEST_VERSION)
            sed -i "s/0.0.0-SET-ME/$NEW_VERSION/g" Cargo.toml
            cargo build --release
            git commit -a -m "chore: release version $NEW_VERSION"
            git tag -a $NEW_VERSION -m "Release $NEW_VERSION"
            git checkout master
            git merge $NEW_VERSION
            git push origin master $NEW_VERSION
      - persist_to_workspace:
          root: target/x86_64-unknown-linux-musl/release
          paths:
            - what-bump
      - store_artifacts:
          path: target/x86_64-unknown-linux-musl/release/what-bump
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts
      - run:
          name: Publish Release on GitHub
          command: |
            VERSION=$(git tag | grep -E '[0-9]+.[0-9]+.[0-9]+.*' | sort -rV | head -1)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/
workflows:
  version: 2
  release:
    jobs:
      - build
      - approve-release:
          type: approval
          requires: [build]
      - release-build:
          requires: [approve-release]
      - publish-github-release:
          requires: [release-build]